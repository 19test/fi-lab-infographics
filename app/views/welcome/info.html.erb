  <section class="media-1"><h3 class="media-heading">
      FIWARE Lab Nodes
    </h3>
    <span>
      FIWARE Lab is a working instance of FIWARE available for experimentation. FIWARE Lab is hosted on multiple nodes across Europe. 
    </span>
    <p>
      This page provides a real time infographics of the capacities of FIWARE Lab nodes.
    </p>
    <%= render :partial => "topbar" %>
  </section>

<div id="error" style="display: none; text-align: center;" class="layoutContainer">
  <span id="errorMessage"></span>
</div>

<div id="infographics" class="layoutContainer">
	<div class="row-fluid">
<!-- 	  <div class="span6" style="margin: 0 auto;float: none;"> -->
	  <div class="span6">
		<div class="section">
			<div class="headerSection accordionTitle">
				<div class="leftIcon">
					<img src="/assets/infographic/iconOmino.png" height="55"/>
				</div>
				<div class="rightDetail">
					<span id="usersNum"></span> users
				</div>
				<div class="clear"></div>
			</div>
			<div class="bodySection accordionPanel smallPanel">
				<div id="basicMen">
				    <div class="smallMen"></div>
				    <div class="mediumMen"></div>
				    <div class="bigMen"></div>
				    <div class="biggerMen"></div>
				    <div class="floatLeft userType">Basic Users</div>
				    <div class="clear"></div>
				</div>
				<div id="trialMen">
				    <div class="smallMen"></div>
				    <div class="mediumMen"></div>
				    <div class="bigMen"></div>
				    <div class="biggerMen"></div>
				    <div class="floatLeft userType">Trial Users</div>
				    <div class="clear"></div>
				</div>
				<div id="communityMen">
				    <div class="smallMen"></div>
				    <div class="mediumMen"></div>
				    <div class="bigMen"></div>
				    <div class="biggerMen"></div>
				    <div class="floatLeft userType">Community Users</div>
				    <div class="clear"></div>
				</div>
			</div>
		    </div>
		    
		    <div class="section">
			<div class="headerSection accordionTitle">
				<div class="leftIcon">
					<img src="/assets/infographic/iconOrg.png" height="55"/>
				</div>
				<div class="rightDetail">
					<span id="orgsNum"></span> organizations
				</div>
				<div class="clear"></div>
			</div>
			<div class="bodySection accordionPanel smallPanel">
				<div id="biggerOrg"></div>
				<div id="bigOrg"></div>
				<div id="mediumOrg"></div>
				<div id="smallOrg"></div>
			</div>
		    </div>

		    <div class="section">
			<div class="headerSection accordionTitle">
				<div class="leftIcon">
					<img src="/assets/infographic/iconMondo.png" height="55"/>
				</div>
				<div class="rightDetail">
					<span id="regionsNum"></span> regions
				</div>
				<div class="clear"></div>
			</div>
			<div class="bodySection accordionPanel bigPanel">
				<div id="world-map"></div>
			</div>
		    </div>

		    <div class="section">
			<div class="headerSection accordionTitle">
				<div class="leftIcon">
					<img src="/assets/infographic/iconCpu.png" height="55"/>
				</div>
				<div class="rightDetail">
					<span id="coresNum"></span> cores
				</div>
				<div class="clear"></div>
			</div>
			<div class="bodySection accordionPanel bigPanel">
				<div id="world-map-cpu"></div>
                        <div style="font-size: 10px;padding-left: 26px;">N.B. numbers in this map refer to virtual cores (which usually have a over commit factor of 16 w.r.t. physical cores)</div>
			</div>
		    </div>

		    <div class="section">
			<div class="headerSection accordionTitle">
				<div class="leftIcon">
					<img src="/assets/infographic/iconRam.png" height="55"/>
				</div>
				<div class="rightDetail">
					<span id="ramNum"></span> GB
				</div>
				<div class="clear"></div>
			</div>
			<div class="bodySection accordionPanel bigPanel">
				<div id="world-map-ram"></div>
                                                <div style="font-size: 10px;padding-left: 26px;">N.B. numbers in this map refer to virtual ram (which usually have an over commit factor of 1.5 w.r.t. physycal ram</div>
			</div>
		    </div>

		    <div class="section">
			<div class="headerSection accordionTitle">
				<div class="leftIcon">
					<img src="/assets/infographic/iconDisk.png" height="55"/>
				</div>
				<div class="rightDetail">
					<span id="hdNum"></span> TB
				</div>
				<div class="clear"></div>
			</div>
			<div class="bodySection accordionPanel bigPanel">
				<div id="world-map-disk"></div>
			</div>
		    </div>
                    <div class="section">
                        <div class="headerSection accordionTitle">
                                <div class="leftIcon">
                                        <img src="/assets/infographic/iconNetwork.png" height="55"/>
                                </div>
                                <div class="rightDetail">
                                        <span id="ipNum"></span> public IPs
                                </div>
                                <div class="clear"></div>
                        </div>
                        <div class="bodySection accordionPanel bigPanel">
                                <div id="world-map-ip"></div>
                        </div>
                    </div>
		    <div class="section">
			<div class="headerSection accordionTitle">
				<div class="leftIcon">
					<img src="/assets/infographic/iconVM.png" height="55"/>
				</div>
				<div class="rightDetail">
					<span id="vmNum"></span> VM
				</div>
				<div class="clear"></div>
			</div>
			<div class="bodySection accordionPanel bigPanel">
				<div id="world-map-vm"></div>
			</div>
		    </div>

	  </div>
	  <div class="span6">
		<div class="section">
			<div class="headerSection accordionTitle ">
				<div class="leftIcon">
					<img src="/assets/infographic/iconInstitution.png" height="55"/>
					
				</div>
				<div class="partnerType">
					Institutions
				</div>
				<div class="rightDetail">
					<div id="parternCount"><!--<span class="badge"></span>--></div>
				</div>
				<div class="clear"></div>
			</div>
			<div class="bodySection accordionPanel bigPanel leaveOpen" id="parternList">
				<div class="parternList">
					Loading...
					<!--<img src="/assets/infographic/loghi/acreo.jpg"/>
					<img src="/assets/infographic/loghi/atos.jpg"/>
					<img src="/assets/infographic/loghi/cesnet.png"/>
					<img src="/assets/infographic/loghi/createnet.gif"/>
					<img src="/assets/infographic/loghi/eng.png"/>
					<img src="/assets/infographic/loghi/eurescom.jpg"/>
					<img src="/assets/infographic/loghi/gowex.jpg"/>
					<img src="/assets/infographic/loghi/orange.jpg"/>
					<img src="/assets/infographic/loghi/telecom.jpg"/>
					<img src="/assets/infographic/loghi/telefonica.jpg"/>
					<img src="/assets/infographic/loghi/thales.gif"/>
					<img src="/assets/infographic/loghi/tn.png"/>-->
				</div>
			</div>
		
			<!--<div class="partnerType">
				<h3>Institutional</h3><span class="badge">14</span>
			</div>-->
			
		</div>
	</div>
</div>
        

<!--<section class="infographic">
    <div class="section">
	<div class="headerSection accordionTitle">
		<div class="leftIcon">
			<img src="/assets/infographic/iconOmino.png" height="55"/>
		</div>
		<div class="rightDetail">
			<span id="usersNum"></span> users
		</div>
		<div class="clear"></div>
	</div>
	<div class="bodySection accordionPanel smallPanel">
		<div id="biggerMen"></div>
		<div id="bigMen"></div>
		<div id="mediumMen"></div>
		<div id="smallMen"></div>
	</div>
    </div>
    
    <div class="section">
	<div class="headerSection accordionTitle">
		<div class="leftIcon">
			<img src="/assets/infographic/iconOrg.png" height="55"/>
		</div>
		<div class="rightDetail">
			<span id="orgsNum"></span> organizations
		</div>
		<div class="clear"></div>
	</div>
	<div class="bodySection accordionPanel smallPanel">
		<div id="biggerOrg"></div>
		<div id="bigOrg"></div>
		<div id="mediumOrg"></div>
		<div id="smallOrg"></div>
	</div>
    </div>

    <div class="section">
	<div class="headerSection accordionTitle">
		<div class="leftIcon">
			<img src="/assets/infographic/iconMondo.png" height="55"/>
		</div>
		<div class="rightDetail">
			<span id="regionsNum"></span> regions
		</div>
		<div class="clear"></div>
	</div>
	<div class="bodySection accordionPanel bigPanel">
		<div id="world-map"></div>
	</div>
    </div>

    <div class="section">
	<div class="headerSection accordionTitle">
		<div class="leftIcon">
			<img src="/assets/infographic/iconCpu.png" height="55"/>
		</div>
		<div class="rightDetail">
			<span id="coresNum"></span> core
		</div>
		<div class="clear"></div>
	</div>
	<div class="bodySection accordionPanel bigPanel">
		<div id="world-map-cpu"></div>
	</div>
    </div>

    <div class="section">
	<div class="headerSection accordionTitle">
		<div class="leftIcon">
			<img src="/assets/infographic/iconRam.png" height="55"/>
		</div>
		<div class="rightDetail">
			<span id="ramNum"></span> GB
		</div>
		<div class="clear"></div>
	</div>
	<div class="bodySection accordionPanel bigPanel">
		<div id="world-map-ram"></div>
	</div>
    </div>

    <div class="section">
	<div class="headerSection accordionTitle">
		<div class="leftIcon">
			<img src="/assets/infographic/iconDisk.png" height="55"/>
		</div>
		<div class="rightDetail">
			<span id="hdNum"></span> TB
		</div>
		<div class="clear"></div>
	</div>
	<div class="bodySection accordionPanel bigPanel">
		<div id="world-map-disk"></div>
	</div>
    </div>

    <div class="section">
	<div class="headerSection accordionTitle">
		<div class="leftIcon">
			<img src="/assets/infographic/iconVM.png" height="55"/>
		</div>
		<div class="rightDetail">
			<span id="vmNum"></span> VM
		</div>
		<div class="clear"></div>
	</div>
	<div class="bodySection accordionPanel bigPanel">
		<div id="world-map-vm"></div>
	</div>
    </div>

    
</section>

<section class="partners">
	<div class="section">
		<div class="headerSection accordionTitle">
			<div class="leftIcon">
				<div class="partnerType">
					<h3>Institutional</h3>
				</div>
			</div>
			<div class="rightDetail">
				<span class="badge">14</span>
			</div>
			<div class="clear"></div>
		</div>
		<div class="bodySection accordionPanel bigPanel">
			<div class="parternList">
			</div>
		</div>
		
	</div>
 
	<div class="section">
		<div class="headerSection accordionTitle">
			<div class="leftIcon">
				<div class="partnerType">
					<h3>Gold</h3>
				</div>
			</div>
			<div class="rightDetail">
				<span class="badge">10</span>
			</div>
			<div class="clear"></div>
		</div>
		<div class="bodySection accordionPanel bigPanel">
			<div class="parternList">
			</div>
		</div>		
	</div>
	
	<div class="section">
		<div class="headerSection accordionTitle">
			<div class="leftIcon">
				<div class="partnerType">
					<h3>Silver</h3>
				</div>
			</div>
			<div class="rightDetail">
				<span class="badge">10</span>
			</div>
			<div class="clear"></div>
		</div>
		<div class="bodySection accordionPanel bigPanel">
			<div class="parternList">
			</div>
		</div>		
	</div>
	
	<div class="section">
		<div class="headerSection accordionTitle">
			<div class="leftIcon">
				<div class="partnerType">
					<h3>Bronze</h3>
				</div>
			</div>
			<div class="rightDetail">
				<span class="badge">10</span>
			</div>
			<div class="clear"></div>
		</div>
		<div class="bodySection accordionPanel bigPanel">
			<div class="parternList">
			</div>
		</div>		
	</div>
</section>
<div class="clear"></div>-->

<% content_for :jsfooter do %>
  <!-- #################################################################################### -->

  <!-- ===== init ===== -->
  <script type="text/javascript">

//          $(window).resize(function(){
//            location.reload();
//          });
	  $(document).ready(function() 
	  {
		  var selectedMarkers;
		  $('.status').removeClass('active');
		  $('.infographic').addClass('active');
		  
  // 		$('#world-map').css('width',$('.section').css("width"));
		  $('.bigPanel').css('height',(Math.round($('#world-map').width()*366/545))+40);
		  $('#world-map').css('height',Math.round($('#world-map').width()*366/545));
		  $('#world-map-cpu').css('height',Math.round($('#world-map-cpu').width()*366/545));
		  $('#world-map-ram').css('height',Math.round($('#world-map-ram').width()*366/545));
		  $('#world-map-disk').css('height',Math.round($('#world-map-disk').width()*366/545));
		  $('#world-map-vm').css('height',Math.round($('#world-map-vm').width()*366/545));
                  $('#world-map-ip').css('height',Math.round($('#world-map-ip').width()*366/545));
  // 		$('#world-map-ge').css('height',Math.round($('#world-map-ge').width()*366/545));
		  /** =================================================================
		  *  Map
		  **/
		  var map = new jvm.WorldMap({
  // 		var map = $('#world-map').vectorMap({
		  container: $('#world-map'),
		  map: 'world_mill_en',
			  backgroundColor: 'white',

		  regionStyle: {
			initial: {
			  fill: '#999999',
			  "fill-opacity": 1,
			  stroke: 'none',
			  "stroke-width": 0,
			  "stroke-opacity": 1
			},
			hover: {
			  "fill-opacity": 0.8
			},
			selected: {
			      fill: '#0071A4'
			},
			selectedHover: {
			}
		  },
		  onMarkerClick: function(events, index) {
		      window.location.href = '<%= root_url(subdomain: "status.lab")%>'+"node/"+selectedMarkers[index].id;	    
		  },
		  markerStyle: {
			initial: {
			  fill: '#ff9900',
			  stroke: '#383f47'
			},
			noUp: {
			  fill: '#ffffff',
			  stroke: '#000000'
			}

		  }

		  });

		  $('#world-map').vectorMap('set', 'focus', 4.3, 0.5, 0.3);

		  var mapCpu = new jvm.WorldMap({
  // 		$('#world-map-cpu').vectorMap({
		  container: $('#world-map-cpu'),
		  map: 'world_mill_en',
		  regionStyle: {
			    initial: {
			      fill: '#ffffff',
			      "fill-opacity": 1,
			      stroke: 'none',
			      "stroke-width": 0,
			      "stroke-opacity": 1
			    },
			    hover: {
			      "fill-opacity": 0.8
			    },
			    selected: {
				  fill: 'orange'
			    },
			    selectedHover: {
			    }
		  },
		  markerStyle: {
			initial: {
			  fill: '#ff9900',
			  stroke: '#383f47'
			}
		  },
		  onMarkerClick: function(events, index) {
		      window.location.href = '<%= root_url(subdomain: "status.lab")%>'+"node/"+selectedMarkers[index].id;	    
		  },
		  series: {
			    regions: [{/*values: {"IT":20,"DE":90},*/
			  // attribute:'fill',
					scale: ['#C8EEFF', '#0071A4'],
  // 					      scale: {
  // 							  84: '#4169E1',
  // 							  64: '#FF69B4'
  // 							},
					normalizeFunction: 'linear'
			    }]
		  }			     

		  });

		  $('#world-map-cpu').vectorMap('set', 'focus', 4.3, 0.5, 0.3);

		  var mapRam = new jvm.WorldMap({
  // 		$('#world-map-ram').vectorMap({
		  container: $('#world-map-ram'),
		  map: 'world_mill_en',
		  regionStyle: {
			    initial: {
			      fill: '#ffffff',
			      "fill-opacity": 1,
			      stroke: 'none',
			      "stroke-width": 0,
			      "stroke-opacity": 1
			    },
			    hover: {
			      "fill-opacity": 0.8
			    },
			    selected: {
				  fill: 'orange'
			    },
			    selectedHover: {
			    }
		  },
		  markerStyle: {
			initial: {
			  fill: '#ff9900',
			  stroke: '#383f47'
			}
		  },
		  onMarkerClick: function(events, index) {
		      window.location.href = '<%= root_url(subdomain: "status.lab")%>'+"node/"+selectedMarkers[index].id;	    
		  },
		  series: {
			    regions: [{
					    scale: ['#C8EEFF', '#0071A4'],
					    normalizeFunction: 'linear'
			    }]
		  }

		  });

		  $('#world-map-ram').vectorMap('set', 'focus', 4.3, 0.5, 0.3);

		  var mapDisk = new jvm.WorldMap({
  // 		$('#world-map-disk').vectorMap({
		  container: $('#world-map-disk'),
		  map: 'world_mill_en',
		  regionStyle: {
			    initial: {
			      fill: '#ffffff',
			      "fill-opacity": 1,
			      stroke: 'none',
			      "stroke-width": 0,
			      "stroke-opacity": 1
			    },
			    hover: {
			      "fill-opacity": 0.8
			    },
			    selected: {
				  fill: 'orange'
			    },
			    selectedHover: {
			    }
		  },
		  markerStyle: {
		    initial: {
		      fill: '#ff9900',
		      stroke: '#383f47'
		    }
		  },
		  onMarkerClick: function(events, index) {
		      window.location.href = '<%= root_url(subdomain: "status.lab")%>'+"node/"+selectedMarkers[index].id;	    
		  },
		  series: {
			    regions: [{
					    scale: ['#C8EEFF', '#0071A4'],
					    normalizeFunction: 'linear'
			    }]
		  }

		  });

		  $('#world-map-disk').vectorMap('set', 'focus', 4.3, 0.5, 0.3);


                var mapIp = new jvm.WorldMap({
  //            $('#world-map-ip').vectorMap({
                  container: $('#world-map-ip'),
                  map: 'world_mill_en',
                  regionStyle: {
                            initial: {
                              fill: '#ffffff',
                              "fill-opacity": 1,
                              stroke: 'none',
                              "stroke-width": 0,
                              "stroke-opacity": 1
                            },
                            hover: {
                              "fill-opacity": 0.8
                            },
                            selected: {
                                  fill: 'orange'
                            },
                            selectedHover: {
                            }
                  },
                  markerStyle: {
                    initial: {
                      fill: '#ff9900',
                      stroke: '#383f47'
                    }
                  },
                  onMarkerClick: function(events, index) {
		      window.location.href = '<%= root_url(subdomain: "status.lab")%>'+"node/"+selectedMarkers[index].id;	    
		  },
                  series: {
                            regions: [{
                                            scale: ['#C8EEFF', '#0071A4'],
                                            normalizeFunction: 'linear'
                            }]
                  }

                  });

                  $('#world-map-ip').vectorMap('set', 'focus', 4.3, 0.5, 0.3);



		  var mapVm = new jvm.WorldMap({
  // 		$('#world-map-vm').vectorMap({
		  container: $('#world-map-vm'),
		  map: 'world_mill_en',
		  regionStyle: {
			    initial: {
			      fill: '#ffffff',
			      "fill-opacity": 1,
			      stroke: 'none',
			      "stroke-width": 0,
			      "stroke-opacity": 1
			    },
			    hover: {
			      "fill-opacity": 0.8
			    },
			    selected: {
				  fill: 'orange'
			    },
			    selectedHover: {
			    }
		  },
		  markerStyle: {
			initial: {
			  fill: '#ff9900',
			  stroke: '#383f47'
			}
		  },
		  onMarkerClick: function(events, index) {
		      window.location.href = '<%= root_url(subdomain: "status.lab")%>'+"node/"+selectedMarkers[index].id;	    
		  },
		  series: {
			    regions: [{
					    scale: ['#C8EEFF', '#0071A4'],
					    normalizeFunction: 'linear'
			    }]
		  }

		  });

		  $('#world-map-vm').vectorMap('set', 'focus', 4.3, 0.5, 0.3);

		  function ajaxFun() { $.ajax (
			    {
			      type: "GET",
			      url: "../api/v1/region",
			      contentType: "application/json; charset=utf-8",
			      data: {},
			      dataType: "json",
			      cache: false,
			      success: function(json){


                              $( "#infographics" ).show();
                              $( "#error" ).hide();

  // 			      var obj = $.parseJSON(json);

				var nBasicUsers = parseInt(json['tot']['basicUsers']);
				var nTrialUsers = parseInt(json['tot']['trialUsers']);
				var nCommunityUsers = parseInt(json['tot']['communityUsers']);
				var nUsers = nBasicUsers + nTrialUsers + nCommunityUsers;
// 				var nUsers = parseInt(json['tot']['total_nb_users']);
                                if (nUsers == 0)
                                  nUsers = 2026 
				var nOrganizations = parseInt(json['tot']['totalUserOrganizations']);
                                if (nOrganizations == 0)
                                  nOrganizations = 549
				var nCores = parseInt(json['tot']['total_nb_cores']);
				var nRam = Math.round(parseInt(json['tot']['total_nb_ram'])/1024); 
				var nHd = Math.round(parseInt(json['tot']['total_nb_disk'])/1024);
				var nVm = parseInt(json['tot']['total_nb_vm']);
				var nRegions = parseInt(json['tot']['total_regions_count']);
                                var nIp = parseInt(json['tot']['total_ip']);
				var selectedRegions = [];
				selectedMarkers = [];
				var selectedRegionsCpu = [];
				var selectedMarkersCpu = [];
				var selectedRegionsRam = [];
				var selectedMarkersRam = [];
				var selectedRegionsDisk = [];
				var selectedMarkersDisk = [];
				var selectedRegionsVm = [];
				var selectedMarkersVm = [];
				var selectedRegionsIp = [];
				var selectedMarkersIp = [];
                                
                                var actualTime = Math.floor(Date.now() / 1000)
                                var deltaTime = 10800;
				$.each(json['regions'], function(key, val) {
  // 				nUsers += parseInt(this['nUser']);
  // 				nCores += parseInt(this['coreTot']);
  // 				nRam += parseInt(this['ramTot']);
  // 				nHd += parseInt(this['hdTot']);
  // 				nVm += parseInt(this['vmTot']);
  // 				nRegions += 1;

  // 				selectedRegions = selectedRegions + '\'' + key  + '\'';
				  selectedRegions.push(this['country']);
                                  if (selectedRegionsCpu[this['country']] == null)
				    selectedRegionsCpu[this['country']] = parseInt(this['nb_cores']);
				  else 
                                    selectedRegionsCpu[this['country']] += parseInt(this['nb_cores']);
                                  if (selectedRegionsRam[this['country']] == null)
                                    selectedRegionsRam[this['country']] = parseInt(this['nb_ram'])/1024;
                                  else
				    selectedRegionsRam[this['country']] += parseInt(this['nb_ram'])/1024;
                                  if (selectedRegionsDisk[this['country']] == null)
				    selectedRegionsDisk[this['country']] = parseInt(this['nb_disk'])/1024;
				  else
				    selectedRegionsDisk[this['country']] += parseInt(this['nb_disk'])/1024;
				  if (selectedRegionsVm[this['country']] == null)
				    selectedRegionsVm[this['country']] = parseInt(this['nb_vm']);
				  else
                                    selectedRegionsVm[this['country']] += parseInt(this['nb_vm']);
				  if (selectedRegionsIp[this['country']] == null)
                                    selectedRegionsIp[this['country']] = parseInt(this['ipTot']);
                                  else 
                                    selectedRegionsIp[this['country']] += parseInt(this['ipTot']);

				  if(this['latitude'] != "" && this['longitude'] != "")
				  {
				      var marker = {};
				      marker["id"] = this['id'];
				      marker["latLng"] = [];
				      marker["latLng"] = [parseFloat(this['latitude']),parseFloat(this['longitude'])];
				      marker["name"] = this['name'];
                                      //console.log(this['timestamp']);
                                      regionTime =( new Date(this['timestamp']).getTime() / 1000)
                                      my_time=new Date(this['timestamp'])
                                      
                                      month=my_time.getMonth()+1;if (month<10)month="0"+month;
				      day=my_time.getDate();if (day<10)day="0"+day;
				      hours=my_time.getUTCHours();if (hours<10)hours="0"+hours;
				      mins=my_time.getUTCMinutes();if (mins<10)mins="0"+mins;
				      the_time=my_time.getFullYear() + "-" + month + "-" + day + "  " + hours + ":" + mins;
							      
                                      if (this['name']=="Gent"){
                                        console.log(this['timestamp'])
                                        console.log(my_time.getMonth());                                       
                                        console.log(the_time);
                                      }

                                      if (actualTime>(regionTime+deltaTime)) {
                                        marker["style"]={fill: '#868F98',stroke: '#383f47'};                                        
                                        marker["name"] = this['name']+": Last Update on "+the_time;
                                      }
                                      else{
                                        marker["name"] = this['name'];
                                      }
                                      //marker["name"] = this['name'];
				      selectedMarkers.push(marker);
				      
				      var markerCpu = {};
                                      freeCpu =  (parseInt(this['nb_cores'])*parseFloat(this['cpu_allocation_ratio'])-parseInt(this['nb_cores_used']));
                                      if (freeCpu<0)
                                         freeCpu = 0;
				      markerCpu["latLng"] = [];
				      markerCpu["latLng"] = [parseFloat(this['latitude']),parseFloat(this['longitude'])];

                                      if (actualTime>(regionTime+deltaTime)) {
                                        markerCpu["style"]={fill: '#868F98',stroke: '#383f47'};
                                        markerCpu["name"] = this['name']+": Last Update on "+the_time;
                                      }
                                      else{
                                        markerCpu["name"] = this['name'] + " (" + freeCpu + " available virtual cores / " + parseInt(this['nb_cores'])*parseFloat(this['cpu_allocation_ratio']) + " total virtual cores / "+parseInt(this['nb_cores']) + " total physical cores)";
                                      }
				      selectedMarkersCpu.push(markerCpu);

				      var markerRam = {};
                                      freeRam = ((1-parseFloat(this['percRAMUsed']))*(parseInt(this['nb_ram']*parseFloat(this['ram_allocation_ratio']))/1024)).toFixed(1);
                                      if (freeRam<0)
                                         freeRam = 0;
				      markerRam["latLng"] = [];
				      markerRam["latLng"] = [parseFloat(this['latitude']),parseFloat(this['longitude'])];

                                      if (actualTime>(regionTime+deltaTime)) {
                                        markerRam["style"]={fill: '#868F98',stroke: '#383f47'};
                                        markerRam["name"] = this['name']+": Last Update on "+the_time;
                                      }
                                      else{
				        markerRam["name"] = this['name'] + " (" + freeRam + " available GB virtual RAM  / " + (parseInt(this['nb_ram']*parseFloat(this['ram_allocation_ratio']))/1024).toFixed(1) +" total GB virtual RAM / " + (parseInt(this['nb_ram'])/1024).toFixed(1) + " total GB physical RAM)";
				      }
                                      selectedMarkersRam.push(markerRam);

				      var markerDisk = {};
                                      freeDisk = ((1-parseFloat(this['percDiskUsed']))*(parseInt(this['nb_disk'])/1024)).toFixed(1);
                                      if (freeDisk<0)
                                         freeDisk = 0;
				      markerDisk["latLng"] = [];
				      markerDisk["latLng"] = [parseFloat(this['latitude']),parseFloat(this['longitude'])];

                                      if (actualTime>(regionTime+deltaTime)) {
                                        markerDisk["style"]={fill: '#868F98',stroke: '#383f47'};
                                        markerDisk["name"] = this['name']+": Last Update on "+the_time;
                                      }
                                      else{
				        markerDisk["name"] = this['name'] + " (Available " + freeDisk + " / " + (parseInt(this['nb_disk'])/1024).toFixed(1) +"  TB)";
				      }
                                      selectedMarkersDisk.push(markerDisk);

                                      var markerIp = {};
                                      markerIp["latLng"] = [];
                                      markerIp["latLng"] = [parseFloat(this['latitude']),parseFloat(this['longitude'])];
                                      if (actualTime>(regionTime+deltaTime)) {
                                        markerIp["style"]={fill: '#868F98',stroke: '#383f47'};
                                        markerIp["name"] = this['name']+": Last Update on "+the_time;
                                      }
                                      else{
                                        markerIp["name"] = this['name'] + " (" + (parseInt(this['ipTot'])-parseInt(this['ipAllocated'])) + " available Public IPs / " + parseInt(this['ipTot']) + " total Public IPs)";
                                      }
                                      selectedMarkersIp.push(markerIp);

				      var markerVm = {};
				      markerVm["latLng"] = [];
				      markerVm["latLng"] = [parseFloat(this['latitude']),parseFloat(this['longitude'])];
                                      if (actualTime>(regionTime+deltaTime)) {
                                        markerVm["style"]={fill: '#868F98',stroke: '#383f47'};
                                        markerVm["name"] = this['name']+": Last Update on "+the_time; 
                                      }
                                      else{
				        markerVm["name"] = this['name'] + " (" + this['nb_vm'] + " vm)";
                                      }
				      selectedMarkersVm.push(markerVm);
				  }


				});


				$('#usersNum').html(nUsers);
				
				/*$('#basicUsersNum').html(nBasicUsers); 
				$('#trialUsersNum').html(nTrialUsers);  
				$('#communityUsersNum').html(nCommunityUsers);*/  
				
				$('#orgsNum').html(nOrganizations);
				$('#regionsNum').html(nRegions);
				$('#coresNum').html(nCores);
				$('#ramNum').html(nRam);
				$('#hdNum').html(nHd);
				$('#vmNum').html(nVm);
                                $('#ipNum').html(nIp);

				var maxMill = Math.floor(nOrganizations/1000);
				var i = 0;
				var biggerOrg = '';
				while (i < maxMill) {
				  biggerOrg = biggerOrg + '<img src="/assets/infographic/organization.png" />';
				  i+= 1;
				}
				$('#biggerOrg').html(biggerOrg);
				
				var maxCent = Math.floor((nOrganizations - maxMill*1000)/100);
				var i = 0;
				var bigOrg = '';
				while (i < maxCent) {
				  bigOrg = bigOrg + '<img src="/assets/infographic/organization.png" />';
				  i+= 1;
				}
				$('#bigOrg').html(bigOrg);

				var maxDec = Math.floor((nOrganizations - maxMill*1000 - maxCent*100)/10);
				i = 0;

				var mediumOrg = '';
				while (i < maxDec) {
				  mediumOrg = mediumOrg + '<img src="/assets/infographic/organization.png" />';
				  i+= 1;
				}
				$('#mediumOrg').html(mediumOrg);

				var maxUni = nOrganizations - maxMill*1000 - maxCent*100 - maxDec*10;//console.log("unità:"+maxUni);
				i = 0;

				var smallOrg = '';
				while (i < maxUni) {
				  smallOrg = smallOrg + '<img src="/assets/infographic/organization.png" />';
				  i+= 1;
				}
				$('#smallOrg').html(smallOrg); 
				
				
				
				/*Users diagram*/
				
				var maxMill = Math.floor(nBasicUsers/1000);
				if(maxMill > 0) $('#basicMen .biggerMen').html('<div class="floatLeft"><img src="/assets/infographic/omino.png" /></div>'+'<div class="numberCircle">'+maxMill+'</div><div class="clear"></div>');
// 				else $('#basicMen .biggerMen').html("&nbsp;");
				var maxCent = Math.floor((nBasicUsers - maxMill*1000)/100);
				if(maxCent > 0) $('#basicMen .bigMen').html('<div class="floatLeft"><img src="/assets/infographic/omino.png" /></div>'+'<div class="numberCircle">'+maxCent+'</div>');
// 				else $('#basicMen .bigMen').html("&nbsp;");
				var maxDec = Math.floor((nBasicUsers - maxMill*1000 - maxCent*100)/10);
				if(maxDec > 0) $('#basicMen .mediumMen').html('<div class="floatLeft"><img src="/assets/infographic/omino.png" /></div>'+'<div class="numberCircle">'+maxDec+'</div>');
// 				else $('#basicMen .mediumMen').html("&nbsp;");
				var maxUni = nBasicUsers - maxMill*1000 - maxCent*100 - maxDec*10;//console.log("unità:"+maxUni);
				$('#basicMen .smallMen').html('<div class="floatLeft"><img src="/assets/infographic/omino.png" /></div>'+'<div class="numberCircle">'+maxUni+'</div>');
				
				maxMill = Math.floor(nTrialUsers/1000);
				if(maxMill > 0) $('#trialMen .biggerMen').html('<div class="floatLeft"><img src="/assets/infographic/omino.png" /></div>'+'<div class="numberCircle">'+maxMill+'</div><div class="clear"></div>');
// 				else $('#trialMen .biggerMen').html("&nbsp;");
				var maxCent = Math.floor((nTrialUsers - maxMill*1000)/100);
				if(maxCent > 0) $('#trialMen .bigMen').html('<div class="floatLeft"><img src="/assets/infographic/omino.png" /></div>'+'<div class="numberCircle">'+maxCent+'</div>');
// 				else $('#trialMen .bigMen').html("&nbsp;");
				var maxDec = Math.floor((nTrialUsers - maxMill*1000 - maxCent*100)/10);
				if(maxDec > 0) $('#trialMen .mediumMen').html('<div class="floatLeft"><img src="/assets/infographic/omino.png" /></div>'+'<div class="numberCircle">'+maxDec+'</div>');
// 				else $('#trialMen .mediumMen').html("&nbsp;");
				var maxUni = nTrialUsers - maxMill*1000 - maxCent*100 - maxDec*10;//console.log("unità:"+maxUni);
				$('#trialMen .smallMen').html('<div class="floatLeft"><img src="/assets/infographic/omino.png" /></div>'+'<div class="numberCircle">'+maxUni+'</div>');
				
				maxMill = Math.floor(nCommunityUsers/1000);
				if(maxMill > 0) $('#communityMen .biggerMen').html('<div class="floatLeft"><img src="/assets/infographic/omino.png" /></div>'+'<div class="numberCircle">'+maxMill+'</div><div class="clear"></div>');
// 				else $('#communityMen .biggerMen').html("&nbsp;");
				var maxCent = Math.floor((nCommunityUsers - maxMill*1000)/100);
				if(maxCent > 0) $('#communityMen .bigMen').html('<div class="floatLeft"><img src="/assets/infographic/omino.png" /></div>'+'<div class="numberCircle">'+maxCent+'</div>');
// 				else $('#communityMen .bigMen').html("&nbsp;");
				var maxDec = Math.floor((nCommunityUsers - maxMill*1000 - maxCent*100)/10);
				if(maxDec > 0) $('#communityMen .mediumMen').html('<div class="floatLeft"><img src="/assets/infographic/omino.png" /></div>'+'<div class="numberCircle">'+maxDec+'</div>');
// 				else $('#communityMen .mediumMen').html("&nbsp;");
				var maxUni = nCommunityUsers - maxMill*1000 - maxCent*100 - maxDec*10;//console.log("unità:"+maxUni);
				$('#communityMen .smallMen').html('<div class="floatLeft"><img src="/assets/infographic/omino.png" /></div>'+'<div class="numberCircle">'+maxUni+'</div>');
				
				
// 				var maxMill = Math.floor(nUsers/1000);
// 				var i = 0;
// 				var biggerMen = '';
// 				while (i < maxMill) {
// 				  biggerMen = biggerMen + '<img src="/assets/infographic/omino.png" />';
// 				  i+= 1;
// 				}
// 				$('#biggerMen').html(biggerMen);
// 				
// 				var maxCent = Math.floor((nUsers - maxMill*1000)/100);
// 				var i = 0;
// 				var bigMen = '';
// 				while (i < maxCent) {
// 				  bigMen = bigMen + '<img src="/assets/infographic/omino.png" />';
// 				  i+= 1;
// 				}
// 				$('#bigMen').html(bigMen);
// 
// 				var maxDec = Math.floor((nUsers - maxMill*1000 - maxCent*100)/10);
// 				i = 0;
// 
// 				var mediumMen = '';
// 				while (i < maxDec) {
// 				  mediumMen = mediumMen + '<img src="/assets/infographic/omino.png" />';
// 				  i+= 1;
// 				}
// 				$('#mediumMen').html(mediumMen);
// 
// 				var maxUni = nUsers - maxMill*1000 - maxCent*100 - maxDec*10;//console.log("unità:"+maxUni);
// 				i = 0;
// 
// 				var smallMen = '';
// 				while (i < maxUni) {
// 				  smallMen = smallMen + '<img src="/assets/infographic/omino.png" />';
// 				  i+= 1;
// 				}
// 				$('#smallMen').html(smallMen);  
				/*end Users diagram*/
				
				
				
				var array_values_cpu = new Array();
				for (var key in selectedRegionsCpu) {
				  array_values_cpu.push(parseInt(selectedRegionsCpu[key]));
				}

				var array_values_ram = new Array();
				for (var key in selectedRegionsRam) {
				  array_values_ram.push(parseInt(selectedRegionsRam[key]));
				}

				var array_values_disk = new Array();
				for (var key in selectedRegionsDisk) {
				  array_values_disk.push(parseInt(selectedRegionsDisk[key]));
				}

                                var array_values_ip = new Array();
                                for (var key in selectedRegionsIp) {
                                  array_values_ip.push(parseInt(selectedRegionsIp[key]));
                                }

				var array_values_vm = new Array();
				for (var key in selectedRegionsVm) {
				  array_values_vm.push(parseInt(selectedRegionsVm[key]));
				}

				map.clearSelectedRegions();
				map.setSelectedRegions(selectedRegions);
				
				map.removeAllMarkers();
				map.addMarkers(selectedMarkers);

				mapCpu.series.regions[0].clear();
  // 			      mapCpux.series.regions[0].params['min'] = 64;
  // 			      mapCpux.series.regions[0].params['max'] = 84;
  // 			      mapCpux.series.regions[0].scale['clearMinValue'] = 64;
  // 			      mapCpux.series.regions[0].scale['clearMaxValue'] = 84;		     
				var max_of_cpu = Math.max.apply(Math, array_values_cpu);
				var min_of_cpu = Math.min.apply(Math, array_values_cpu);
				mapCpu.series.regions[0].scale['minValue'] = min_of_cpu;
				mapCpu.series.regions[0].scale['maxValue'] = max_of_cpu;
  // 			      mapCpux.series.regions[0].setScale(['#C8EEFF', '#0071A4']);
  // 			      mapCpux.series.regions[0].params['values'] = selectedRegionsCpu;
				mapCpu.series.regions[0].setValues(selectedRegionsCpu); 
				//console.log(mapCpu.series.regions[0]);			     
  // 			      mapCpu.series.regions[0].normalizeFunction = 'polynomial';
				mapCpu.removeAllMarkers();
				mapCpu.addMarkers(selectedMarkersCpu);

				mapRam.series.regions[0].clear();
				var max_of_ram = Math.max.apply(Math, array_values_ram);
				var min_of_ram = Math.min.apply(Math, array_values_ram);
				mapRam.series.regions[0].scale['minValue'] = min_of_ram;
				mapRam.series.regions[0].scale['maxValue'] = max_of_ram;
				mapRam.series.regions[0].setValues(selectedRegionsRam);
				mapRam.removeAllMarkers();
				mapRam.addMarkers(selectedMarkersRam);

				mapDisk.series.regions[0].clear();
				var max_of_disk = Math.max.apply(Math, array_values_disk);
				var min_of_disk = Math.min.apply(Math, array_values_disk);
				mapDisk.series.regions[0].scale['minValue'] = min_of_disk;
				mapDisk.series.regions[0].scale['maxValue'] = max_of_disk;
				mapDisk.series.regions[0].setValues(selectedRegionsDisk);
				mapDisk.removeAllMarkers();
				mapDisk.addMarkers(selectedMarkersDisk);

                                mapIp.series.regions[0].clear();
                                var max_of_ip = Math.max.apply(Math, array_values_ip);
                                var min_of_ip = Math.min.apply(Math, array_values_ip);
                                mapIp.series.regions[0].scale['minValue'] = min_of_ip;
                                mapIp.series.regions[0].scale['maxValue'] = max_of_ip;
                                mapIp.series.regions[0].setValues(selectedRegionsIp);
                                mapIp.removeAllMarkers();
                                mapIp.addMarkers(selectedMarkersIp);

				mapVm.series.regions[0].clear();
				var max_of_vm = Math.max.apply(Math, array_values_vm);
				var min_of_vm = Math.min.apply(Math, array_values_vm);
				mapVm.series.regions[0].scale['minValue'] = min_of_vm;
				mapVm.series.regions[0].scale['maxValue'] = max_of_vm;
				mapVm.series.regions[0].setValues(selectedRegionsVm);
				mapVm.removeAllMarkers();
				mapVm.addMarkers(selectedMarkersVm);


			      },
			      error: function(xhr, textStatus, errorThrown){
				  $('.biggerMen').html("&nbsp;");
				  $('.bigMen').html("&nbsp;");
				  $('.mediumMen').html("&nbsp;");
				  $('.smallMen').html("&nbsp;");
				  $('#biggerOrg').html("&nbsp;");
				  $('#bigOrg').html("&nbsp;");
				  $('#mediumOrg').html("&nbsp;");

                                  $( "#infographics" ).hide();
                                  $( "#error" ).show();

                                  var errore = "<%= FiLabInfographics.nodata %>";
                                  if(xhr.responseText != null && xhr.responseText != "" && xhr.responseText != "null")
                                          errore = xhr.responseText;
                                  $('#errorMessage').html(errore);
				  } 
			  }
		  );
		  $.ajax (
			    {
				  type: "POST",
				  url: "../../api/v1/institution",//to get institutions
				  contentType: "application/json; charset=utf-8",
				  data: {},
				  dataType: "json",
				  cache: false,
				  success: function(json){
				      
				    var institutionsData = json;
	  			      
				    if(institutionsData != null && institutionsData != "undefined" )
				    {
				      $(".parternList").html("");
				      
				      var parternCount = institutionsData.length;
				      $("#parternCount").html("<span class=\"badge\">"+parternCount+"</span>");
// 				      var parternRows = Math.ceil(parternCount/3);
// 				      var heightPanel = parternRows*130;
				      
				      
				      
				      $.each(institutionsData, function( index, institution ){
				      
					if(institution["link"]!= null && institution["link"] != "undefined")
					  $(".parternList").append("<a href=\""+institution["link"]+"\" target=\"_blank\"><img alt=\""+institution["name"]+"\" title=\""+institution["name"]+"\" src=\"/assets/infographic/loghi/"+institution["logo"]+"\"/></a>");
					else
					  $(".parternList").append("<img alt=\""+institution["name"]+"\" title=\""+institution["name"]+"\" src=\"/assets/infographic/loghi/"+institution["logo"]+"\"/>");
					
					$('#parternList').css('height',$(".parternList").height()+10);
					});  
					
					if(parternCount==0) $(".parternList").html("No institutions found");
				      
				    }
// 				    $("#imgHistoryMessages").hide();  
				  },
				  error: function(xhr, textStatus, errorThrown){
				    var errore = "<%= FiLabInfographics.nodata %>";
				    if(xhr.responseText != null && xhr.responseText != "" && xhr.responseText != "null")
					    errore = xhr.responseText;
	  // 				      $('#tableHeaderContent').html("<DIV CLASS='field field-header'>"+errore+"</DIV>");
				    $(".parternList").html(errore);
	  //     				alert('request failed->'+textStatus);
      //         				console.log(xhr.status + ' çççç'+xhr.body+'òòòò' + textStatus + ' ' + errorThrown);
// 				    $("#imgHistoryMessages").hide();
				  } 
			}
		      );
		  
		  }



		  /** ================================================================= 
		  *	Accordion Effect
		  */
		  $('.accordionPanel').not('.leaveOpen').hide();
		  $('.accordionTitle').click( function()
		  {
			  var $this = $(this);
			  $this.next('.accordionPanel').slideToggle(function()
			  {
				  if( $this.hasClass('closeme' ) )
				  {
					  $this.removeClass('closeme' );
					  $this.addClass('openme' );
				  }
				  else
				  {
					  $this.removeClass('openme' );
					  $this.addClass('closeme' );
				  }
			  });
		  });
		  $('.accordionTitle').hover( 
			  function()
			  {
				  $(this).addClass('hovered');
			  },
			  function()
			  {
				  $(this).removeClass('hovered');
			  }
		  );

		  /** ================================================================= **/
		  //Chiamo il mio ajax la prima volta
		  ajaxFun();
		  //e poi lo richiamo dopo 1 minuto
		  setInterval(function(){ajaxFun()}, 60000);

  // 		$. ajax (
  // 			  {
  // 			    type: "GET",
  // 			    dataType: 'json',
  // 			    url: "http://192.168.59.2:1337/region",
  // 			    data: data,
  // 			    success: function (data)
  // 			    {
  // 				  console.log(data)
  // 			    }
  // 			}
  // 		);

  // 		$.ajax({
  // 			url: "http://192.168.59.2:1337/region",
  // 			cache: false
  // 			})
  // 			.done(function( html ) {
  // 			  console.log(html);
  // 			});

  // 		var request = $.ajax({
  // 				      url: "http://192.168.59.2:1337/region",
  // 				      type: "GET",
  // 				      data: {},
  // 				      dataType: "json"
  // 		});
  // 		
  // 		request.done(function( msg ) {
  // 		  console.log("AAAAAAAAAAA");
  // 		  console.log(msg);
  // 		});
  // 		
  // 		request.fail(function( jqXHR, textStatus ) {
  // 							    alert( "Request failed: " + textStatus+jqXHR );
  // 							    });

  // 		$.ajax({
  // 			dataType: "json",
  // 			url: url,
  // 			data: data,
  // 			success: success
  // 		});

  // 		setInterval('window.location.reload()', 60000);
      
	  });
  </script>
<% end %>
